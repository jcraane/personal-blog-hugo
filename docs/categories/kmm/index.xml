<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KMM on Jamie Craane personal blog</title>
    <link>https://jamiecraane.dev/categories/kmm/</link>
    <description>Recent content in KMM on Jamie Craane personal blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://jamiecraane.dev/categories/kmm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KMM adoption strategies</title>
      <link>https://jamiecraane.dev/2021/11/15/kmm_adoption_strategies/</link>
      <pubDate>Mon, 15 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jamiecraane.dev/2021/11/15/kmm_adoption_strategies/</guid>
      <description>KMM adoption strategies Introduction Kotlin multiplatform Mobile, in short KMM, lets you write native cross platform mobile applications. It lets you share logic across iOS and Android while still leveraging all of the native features of the platform.
There are several advantages of sharing code between platforms:
Reduced development time More consistent logic across platforms More consistent behavior across platforms Less bugs Improved team communication KMM gives the flexibility to decide what code is shared.</description>
    </item>
    
    <item>
      <title>Localized resources and images in KMM</title>
      <link>https://jamiecraane.dev/2021/07/27/resource_images_kmm/</link>
      <pubDate>Tue, 27 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jamiecraane.dev/2021/07/27/resource_images_kmm/</guid>
      <description>Introduction Kotlin Multiplatform Mobile (in short KMM) allows you to share a lot of code which is normally duplicated across iOS and Android native platforms. KMM does not mandate that certain type of code is shared, it is up to you. It also does not mandate any particular architecture.
Although KMM enables sharing of code between platforms it does not provide the ability to share localized string resources and images out-of-the box between iOS and Android.</description>
    </item>
    
  </channel>
</rss>
