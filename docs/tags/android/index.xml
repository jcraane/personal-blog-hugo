<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on Jamie Craane personal blog</title>
    <link>https://jamiecraane.dev/tags/android/</link>
    <description>Recent content in Android on Jamie Craane personal blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 27 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://jamiecraane.dev/tags/android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sharing localized string resources and images between iOS and Android in Kotlin Multiplatform Mobile</title>
      <link>https://jamiecraane.dev/2021/07/27/resource_images_kmm/</link>
      <pubDate>Tue, 27 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jamiecraane.dev/2021/07/27/resource_images_kmm/</guid>
      <description>Introduction With Kotlin Multiplatform Mobile (in short KMM) allows you to share a lot of code which is normally duplicated across iOS and Android native platforms. KMP does mandate that certain type of code to be shared, it is up to you. It also does not mandate any particular architecture.
Although KMM enables sharing of code between platforms it does not provide the ability to share string resources and images out-of-the box between iOS and Android.</description>
    </item>
    
    <item>
      <title>Casting images with Chromecast</title>
      <link>https://jamiecraane.dev/2021/01/05/android_chromecast_images/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jamiecraane.dev/2021/01/05/android_chromecast_images/</guid>
      <description>Full source code can be found here: https://github.com/jcraane/android-simple-image-cast
By adding Chromecast support to media rich apps like photo- and video players, users can display content to Chromecast enabled devices. This greatly enhances the user experience of those apps.
This post demonstrates how to integrate the Chromecast SDK to add cast support for casting images. The app displays a list of publicly available images using an image carousel. When the user scrolls through those images, the images are cast to a connected receiver.</description>
    </item>
    
  </channel>
</rss>
